{"version":3,"file":"Grid.stories-96783374.js","sources":["../../src/Grid/index.tsx"],"sourcesContent":["import { assignInlineVars } from '@vanilla-extract/dynamic';\r\nimport { grid, rowCount, columnCount, gridGap } from './Grid.css';\r\n\r\ninterface GridProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  rows: number;\r\n  columns: number;\r\n  gap?: string;\r\n}\r\n\r\nconst Grid = (props: React.PropsWithChildren<GridProps>) => {\r\n  const { rows, columns, gap = '', children, className, style, ...rest } = props;\r\n  return (\r\n    <div\r\n      className={`${className} ${grid}`}\r\n      style={{\r\n        ...style,\r\n        ...assignInlineVars({\r\n          [rowCount]: rows.toString(),\r\n          [columnCount]: columns.toString(),\r\n          [gridGap]: gap,\r\n        }),\r\n      }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n"],"names":["Grid","props","rows","columns","gap","children","className","style","rest","jsx","grid","assignInlineVars","rowCount","columnCount","gridGap"],"mappings":"sJASA,MAAAA,EAAAC,GAAA,CACE,KAAA,CAAA,KAAAC,EAAA,QAAAC,EAAA,IAAAC,EAAA,GAAA,SAAAC,EAAA,UAAAC,EAAA,MAAAC,EAAA,GAAAC,CAAA,EAAAP,EACA,OAAAQ,EAAA,IACE,MAAC,CAAA,UAAA,GAAAH,CAAA,IAAAI,CAAA,GACgC,MAAA,CACxB,GAAAH,EACF,GAAAI,EAAA,CACiB,CAAAC,CAAA,EAAAV,EAAA,SAAA,EACQ,CAAAW,CAAA,EAAAV,EAAA,SAAA,EACM,CAAAW,CAAA,EAAAV,CACrB,CAAA,CACZ,EACH,GAAAI,EACI,SAAAH,CAEH,CAAA,CAGP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}