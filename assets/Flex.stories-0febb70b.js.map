{"version":3,"file":"Flex.stories-0febb70b.js","sources":["../../src/Flex/index.tsx"],"sourcesContent":["import { assignInlineVars } from '@vanilla-extract/dynamic';\r\nimport {\r\n  flex,\r\n  inlineFlex,\r\n  flexDirection,\r\n  justifyContent,\r\n  alignItems,\r\n  flexGap,\r\n  flexWrap,\r\n} from './Flex.css';\r\n\r\ntype OverflowPosition = 'unsafe' | 'safe';\r\n\r\ntype BaselinePosition =\r\n  | 'baseline'\r\n  | 'first baseline'\r\n  | 'last baseline'\r\n  | 'baseline first'\r\n  | 'baseline last';\r\ntype SelfPosition =\r\n  | 'center'\r\n  | 'start'\r\n  | 'end'\r\n  | 'self-start'\r\n  | 'self-end'\r\n  | 'flex-start'\r\n  | 'flex-end';\r\ntype AlignItems =\r\n  | 'normal'\r\n  | 'stretch'\r\n  | BaselinePosition\r\n  | SelfPosition\r\n  | `${OverflowPosition} ${SelfPosition}`;\r\n\r\ntype ContentDistribution = 'space-between' | 'space-evenly' | 'space-around' | 'stretch';\r\ntype ContentPosition = 'center' | 'start' | 'end' | 'flex-start' | 'flex-end';\r\ntype Direction = 'left' | 'right';\r\ntype JustifyContent =\r\n  | 'normal'\r\n  | ContentDistribution\r\n  | Direction\r\n  | ContentPosition\r\n  | `${OverflowPosition} ${ContentPosition}`\r\n  | `${OverflowPosition} ${Direction}`;\r\n\r\ninterface FlexProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  direction?: 'row' | 'row-reverse' | 'column' | 'column-reverse';\r\n  justify?: JustifyContent;\r\n  align?: AlignItems;\r\n  wrap?: 'wrap' | 'nowrap' | 'wrap-reverse';\r\n  gap?: string;\r\n  inline?: boolean;\r\n}\r\n\r\nconst Flex = (props: React.PropsWithChildren<FlexProps>) => {\r\n  const {\r\n    direction = 'row',\r\n    justify = 'normal',\r\n    align = 'normal',\r\n    inline = false,\r\n    wrap = 'nowrap',\r\n    gap = '',\r\n    children,\r\n    className,\r\n    style,\r\n    ...rest\r\n  } = props;\r\n\r\n  return (\r\n    <div\r\n      className={`${className} ${inline ? inlineFlex : flex}`}\r\n      style={{\r\n        ...style,\r\n        ...assignInlineVars({\r\n          [flexDirection]: direction,\r\n          [justifyContent]: justify,\r\n          [alignItems]: align,\r\n          [flexGap]: gap,\r\n          [flexWrap]: wrap,\r\n        }),\r\n      }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Flex;\r\n"],"names":["Flex","props","direction","justify","align","inline","wrap","gap","children","className","style","rest","jsx","inlineFlex","flex","assignInlineVars","flexDirection","justifyContent","alignItems","flexGap","flexWrap"],"mappings":"uMAsDA,MAAAA,EAAAC,GAAA,CACE,KAAA,CAAM,UAAAC,EAAA,MACQ,QAAAC,EAAA,SACF,MAAAC,EAAA,SACF,OAAAC,EAAA,GACC,KAAAC,EAAA,SACF,IAAAC,EAAA,GACD,SAAAC,EACN,UAAAC,EACA,MAAAC,EACA,GAAAC,CACG,EAAAV,EAGL,OAAAW,EAAA,IACE,MAAC,CAAA,UAAA,GAAAH,CAAA,IAAAJ,EAAAQ,EAAAC,CAAA,GACsD,MAAA,CAC9C,GAAAJ,EACF,GAAAK,EAAA,CACiB,CAAAC,CAAA,EAAAd,EACD,CAAAe,CAAA,EAAAd,EACC,CAAAe,CAAA,EAAAd,EACJ,CAAAe,CAAA,EAAAZ,EACH,CAAAa,CAAA,EAAAd,CACC,CAAA,CACb,EACH,GAAAK,EACI,SAAAH,CAEH,CAAA,CAGP;;;;;;;;;;;;;;;;;;;;;;;;"}