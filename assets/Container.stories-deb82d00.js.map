{"version":3,"file":"Container.stories-deb82d00.js","sources":["../../src/Container/index.tsx"],"sourcesContent":["import type { CSSProperties } from 'react';\r\nimport type { PolymorphicElementPropsWithRef } from '../types';\r\nimport { assignInlineVars } from '@vanilla-extract/dynamic';\r\nimport { center, maxWidthVar, minWidthVar } from './Container.css';\r\nimport { toPixelIfNumber } from '../utils/toPixelIfNumber';\r\n\r\ntype ContainerProps = {\r\n  minWidth?: CSSProperties['minWidth'];\r\n  maxWidth?: CSSProperties['maxWidth'];\r\n};\r\n\r\nconst Container = <E extends React.ElementType = 'div'>(\r\n  props: PolymorphicElementPropsWithRef<E, ContainerProps>\r\n) => {\r\n  const {\r\n    as: Element = 'div',\r\n    maxWidth = 'max-content',\r\n    minWidth = 'min-content',\r\n    ref,\r\n    children,\r\n    className,\r\n    style,\r\n    ...rest\r\n  } = props;\r\n\r\n  return (\r\n    <Element\r\n      ref={ref}\r\n      className={`${center}` + (className ? ` ${className}` : '')}\r\n      style={{\r\n        ...style,\r\n        ...assignInlineVars({\r\n          [maxWidthVar]: toPixelIfNumber(maxWidth),\r\n          [minWidthVar]: toPixelIfNumber(minWidth),\r\n        }),\r\n      }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Element>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n"],"names":["Container","props","Element","maxWidth","minWidth","ref","children","className","style","rest","jsx","center","assignInlineVars","maxWidthVar","toPixelIfNumber","minWidthVar"],"mappings":"4HAWA,MAAAA,EAAAC,GAAA,CAGE,KAAA,CAAM,GAAAC,EAAA,MACU,SAAAC,EAAA,cACH,SAAAC,EAAA,cACA,IAAAC,EACX,SAAAC,EACA,UAAAC,EACA,MAAAC,EACA,GAAAC,CACG,EAAAR,EAGL,OAAAS,EAAA,IACER,EAAC,CAAA,IAAAG,EACC,UAAA,GAAAM,CAAA,IAAAJ,EAAA,IAAAA,CAAA,GAAA,IACwD,MAAA,CACjD,GAAAC,EACF,GAAAI,EAAA,CACiB,CAAAC,CAAA,EAAAC,EAAAX,CAAA,EACqB,CAAAY,CAAA,EAAAD,EAAAV,CAAA,CACA,CAAA,CACxC,EACH,GAAAK,EACI,SAAAH,CAEH,CAAA,CAGP;;;;"}